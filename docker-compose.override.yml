version: '3.9'

services:
  kong-gateway:
    ports:
      - '8000:8000'
      - '8001:8001'
      - '8443:8443'
      - '8444:8444'
    environment:
      - KONG_DATABASE=off
      - KONG_DECLARATIVE_CONFIG=/usr/local/kong/declarative/kong.yml
      - KONG_PROXY_ACCESS_LOG=/dev/stdout
      - KONG_ADMIN_ACCESS_LOG=/dev/stdout
      - KONG_PROXY_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_LISTEN=0.0.0.0:8001, 0.0.0.0:8444 ssl
    healthcheck:
      test: ['CMD', 'kong', 'health']
      interval: 10s
      timeout: 10s
      retries: 10
    mem_limit: 256m
    cpus: 0.1
    restart: on-failure
    networks:
      - eshop

  mssql:
    user: root
    volumes:
      - mssql-data:/var/opt/mssql/data
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=Admin@123
    mem_limit: 1Gb
    healthcheck:
      test: /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P ""$$SA_PASSWORD"" -Q "SELECT 1" || exit 1
      timeout: 45s
      interval: 10s
      retries: 10
    cpus: 0.2
    ports:
      - 1433:1433
    networks:
      - eshop

  mongo:
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - mongo-data:/data/db
    mem_limit: 256m
    cpus: 0.1
    ports:
      - 27017:27017
    networks:
      - eshop

  postgres:
    container_name: postgres
    user: root
    image: postgres:14
    environment:
      - POSTGRES_PASSWORD=Admin@123
    volumes:
      - postgres-data:/var/lib/postgresql/data
    mem_limit: 100m
    cpus: 0.1
    ports:
      - 5432:5432
    networks:
      - eshop

  pgadmin:
    image: dpage/pgadmin4:6.3
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@gmail.com
      - PGADMIN_DEFAULT_PASSWORD=Admin@123
    ports:
      - 5050:80

  redis:
    command: 'redis-server --appendonly yes --requirepass "${REDIS_PASSWORD}"'
    environment:
      - REDIS_PASSWORD=Admin@123
    volumes:
      - redis-data:/data
    ports:
      - 6379:6379
    networks:
      - eshop

  rabbitmq:
    mem_limit: 128m
    cpus: 0.1
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3
    ports:
      - 15672:15672
      - 5672:5672
    networks:
      - eshop

  catalog-service:
    environment:
      - PORT=3000
      - GRPC_CONNECTION_URL=0.0.0.0:4000
      - DB_NAME=Catalog_Service_Db
      - DB_USERNAME=sa
      - DB_PASSWORD=Admin@123
      - DB_PORT=1433
      - DB_HOST=host.docker.internal
      - AUTH0_AUDIENCE=http://localhost:3000/
      - AUTH0_DOMAIN=https://dev-914wvn2h.us.auth0.com/
      - RABBIT_MQ_URI=amqp://guest:guest@host.docker.internal
      - REVIEW_GRPC_CONNECTION_URL=host.docker.internal:4002
      - STORAGE_GRPC_CONNECTION_URL=host.docker.internal:4003
      - BRAND_GRPC_CONNECTION_URL=host.docker.internal:4004
      - EXCHANGE_GRPC_CONNECTION_URL=host.docker.internal:4006
      - DISCOUNT_GRPC_CONNECTION_URL=host.docker.internal:4007
    ports:
      - 3010:3000
      - 4000:4000
    restart: unless-stopped
    mem_limit: 128m
    cpus: 0.1
    depends_on:
      - mssql
      - rabbitmq
    networks:
      - eshop

  basket-service:
    container_name: basket-service
    environment:
      - REDIS_PORT=17223
      - REDIS_HOST=host.docker.internal
      - REDIS_USERNAME=admin
      - REDIS_PASSWORD=Admin@123
      - MQ_URL=amqp://guest:guest@host.docker.internal
      - DB_HOST=host.docker.internal
      - DB_PORT=1433
      - DB_USERNAME=sa
      - DB_PASSWORD=Admin@123
      - DB_NAME=Basket_Service_Db
    ports:
      - 3011:3002
    mem_limit: 100m
    cpus: 0.1
    depends_on:
      - mssql
      - rabbitmq
    networks:
      - eshop

networks:
  eshop:
    driver: bridge

volumes:
  mssql-data:
    driver: local
  mongo-data:
    driver: local
  postgres-data:
    driver: local
  redis-data:
    driver: local
