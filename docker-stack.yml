version: "3.9"

services:
  kong-gateway:
    image: eshop_kong-gateway
    environment:
      - KONG_DATABASE=off
      - KONG_DECLARATIVE_CONFIG=/usr/local/kong/declarative/kong.yml
      - KONG_PROXY_ACCESS_LOG=/dev/stdout
      - KONG_ADMIN_ACCESS_LOG=/dev/stdout
      - KONG_PROXY_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_LISTEN=0.0.0.0:8001, 0.0.0.0:8444 ssl
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10
    deploy:
      resources:
        limits:
          memory: 256m
          cpus: "0.1"
    ports:
      - 8000:8000
      - 8001:8001
      - 8443:8443
      - 8444:8444
    networks:
      - production

  mssql:
    image: eshop_mssql
    user: root
    volumes:
      - mssql-data:/var/opt/mssql/data
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=Admin@123
    healthcheck:
      test: /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P ""$$SA_PASSWORD"" -Q "SELECT 1" || exit 1
      timeout: 45s
      interval: 10s
      retries: 10
    deploy:
      resources:
        limits:
          memory: 1Gb
          cpus: "0.2"
    ports:
      - 1433:1433
    networks:
      - production

  postgres:
    image: eshop_postgres
    environment:
      - POSTGRES_PASSWORD=Admin@123
    volumes:
      - postgres-data:/var/lib/postgresql/data
    deploy:
      resources:
        limits:
          memory: 100m
          cpus: "0.1"
    ports:
      - 5432:5432
    networks:
      - production

  mongo:
    image: mongo:5.0.5
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=password
    volumes:
      - mongo-data:/data/db
    deploy:
      resources:
        limits:
          memory: 256m
          cpus: "0.1"
    ports:
      - 27017:27017
    networks:
      - production

  redis:
    image: redis:6.2.6-alpine
    environment:
      - REDIS_PASSWORD=Admin@123
    volumes:
      - redis-data:/data
    deploy:
      resources:
        limits:
          memory: 32m
          cpus: "0.1"
    ports:
      - 6379:6379
    networks:
      - production

  rabbitmq:
    image: rabbitmq:3.9.11-management-alpine
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3
    ports:
      - 15672:15672
      - 5672:5672
    networks:
      - production

  mailhog:
    image: mailhog/mailhog:v1.0.1
    deploy:
      resources:
        limits:
          memory: 32m
          cpus: "0.1"
    ports:
      - 1025:1025
      - 8025:8025
    networks:
      - production

  catalog-service:
    image: eshop_catalog-service
    environment:
      - PORT=3000
      - GRPC_CONNECTION_URL=0.0.0.0:4000
      - DB_NAME=Catalog_Service_Db
      - DB_USERNAME=sa
      - DB_PASSWORD=Admin@123
      - DB_PORT=1433
      - DB_HOST=mssql
      - RABBIT_MQ_URI=amqp://guest:guest@rabbitmq
      - REVIEW_GRPC_CONNECTION_URL=review-service:4002
      - STORAGE_GRPC_CONNECTION_URL=storage-service:4003
      - BRAND_GRPC_CONNECTION_URL=vendor-service:4004
      - EXCHANGE_GRPC_CONNECTION_URL=host.docker.internal:4006
      - DISCOUNT_GRPC_CONNECTION_URL=host.docker.internal:4007
    ports:
      - 3010:3000
    deploy:
      resources:
        limits:
          memory: 128m
          cpus: "0.1"
    depends_on:
      - mssql
      - rabbitmq
    networks:
      - production

  basket-service:
    image: eshop_basket-service
    environment:
      - REDIS_PORT=6379
      - REDIS_HOST=redis
      - REDIS_USERNAME=
      - REDIS_PASSWORD=
      - MQ_URL=amqp://guest:guest@rabbitmq
      - DB_HOST=mssql
      - DB_PORT=1433
      - DB_USERNAME=sa
      - DB_PASSWORD=Admin@123
      - DB_NAME=Basket_Service_Db
    ports:
      - 3011:3002
    deploy:
      resources:
        limits:
          memory: 100m
          cpus: "0.1"
    depends_on:
      - redis
      - mssql
      - rabbitmq
    networks:
      - production

  review-service:
    image: eshop_review-service
    environment:
      - PORT=3000
      - GRPC_CONNECTION_URL=0.0.0.0:4002
      - DB_HOST=mssql
      - DB_PORT=1433
      - DB_USER=sa
      - DB_PASSWORD=Admin@123
      - DB_NAME=Review_Service_Db
      - RABBIT_MQ_URI=amqp://guest:guest@rabbitmq
      - STORAGE_GRPC_CONNECTION_URL=host.docker.internal:4003
      - REACTION_GRPC_CONNECTION_URL=host.docker.internal:4010
    ports:
      - 3012:3000
    deploy:
      resources:
        limits:
          memory: 100m
          cpus: "0.1"
    depends_on:
      - mssql
      - rabbitmq
    networks:
      - production

  storage-service:
    image: eshop_storage-service
    environment:
      - PORT=3000
      - GRPC_CONNECTION_URL=0.0.0.0:4003
      - DB_HOST=mssql
      - DB_PORT=1433
      - DB_USER=sa
      - DB_PASSWORD=Admin@123
      - DB_NAME=Storage_Service_Db
      - AWS_REGION=${AWS_REGION}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_BUCKET=${AWS_BUCKET}
      - RABBIT_MQ_URI=amqp://guest:guest@rabbitmq
    ports:
      - 3013:3000
    deploy:
      resources:
        limits:
          memory: 100m
          cpus: "0.1"
    depends_on:
      - mssql
      - rabbitmq
    networks:
      - production

  vendor-service:
    image: eshop_vendor-service
    environment:
      - PORT=3000
      - GRPC_CONNECTION_URL=0.0.0.0:4004
      - DB_HOST=mssql
      - DB_PORT=1433
      - DB_USER=sa
      - DB_PASSWORD=Admin@123
      - DB_NAME=Vendor_Service_Db
      - RABBIT_MQ_URI=amqp://guest:guest@rabbitmq
      - CATALOG_GRPC_CONNECTION_URL=catalog-service:4000
      - STORAGE_GRPC_CONNECTION_URL=storage-service:4003
    ports:
      - 3014:3000
    deploy:
      resources:
        limits:
          memory: 100m
          cpus: "0.1"
    depends_on:
      - mssql
      - rabbitmq
    networks:
      - production

  payment-service:
    image: eshop_payment-service
    environment:
      - SECRET_KEY=django-insecure-@th^zqyu(bf)e3*l8*pii8@v&%=o*e18j1*knui8*esi0d71fz
      - DEBUG=False
      - DATABASE_NAME=payment_service_db
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=Admin@123
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - STRIPE_PUBLISHABLE_KEY=${STRIPE_PUBLISHABLE_KEY}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - RABBIT_MQ_URI=rabbitmq
      - RABBIT_MQ_USER=guest
      - RABBIT_MQ_PASSWORD=guest
      - RABBIT_VIRTUAL_HOST=/
      - PORT=0.0.0.0:8000
      - EXCHANGE_RATE_GRPC_CONNECTION=currency-service:4006
      - ALLOWED_HOSTS=payment-service
      - ALLOWED_ORIGINS=http://customer-web-client:3000,https://festive-bassi-552424.netlify.app
    deploy:
      resources:
        limits:
          memory: 256m
          cpus: "0.1"
    depends_on:
      - rabbitmq
      - postgres
    ports:
      - 3015:8000
    networks:
      - production

  currency-service:
    image: eshop_currency-service
    environment:
      - PORT=3000
      - GRPC_CONNECTION_URL=0.0.0.0:4006
      - EXCHANGE_RATE_URL=http://api.exchangeratesapi.io/v1/latest
      - EXCHANGE_RATE_API_KEY=${EXCHANGE_RATE_API_KEY}
      - DB_HOST=mssql
      - DB_PORT=1433
      - DB_USER=sa
      - DB_PASSWORD=Admin@123
      - DB_NAME=Exchange_Rate_Service_Db
    deploy:
      resources:
        limits:
          memory: 100m
          cpus: "0.1"
    depends_on:
      - mssql
    ports:
      - 3016:3000
    networks:
      - production

  discount-service:
    image: eshop_discount-service
    environment:
      - PORT=3000
      - GRPC_CONNECTION_URL=0.0.0.0:4007
      - DB_NAME=Discount_Service_Db
      - DB_USERNAME=sa
      - DB_PASSWORD=Admin@123
      - DB_PORT=1433
      - DB_HOST=mssql
      - DISCOUNT_PACKAGE=discounts
      - EXCHANGE_PACKAGE=exchange_rates
      - STORAGE_GRPC_CONNECTION_URL=storage-service:4003
      - EXCHANGE_GRPC_CONNECTION_URL=currency-service:4006
      - RABBIT_MQ_URI=amqp://guest:guest@rabbitmq
    deploy:
      resources:
        limits:
          memory: 100m
          cpus: "0.1"
    depends_on:
      - mssql
    ports:
      - 3017:3000
    networks:
      - production

  coupon-service:
    image: eshop_coupon-service
    environment:
      - PORT=3000
      - DB_NAME=Coupon_Service_Db
      - DB_USERNAME=sa
      - DB_PASSWORD=Admin@123
      - DB_PORT=1433
      - DB_HOST=mssql
      - STORAGE_GRPC_CONNECTION_URL=storage-service:4003
      - EXCHANGE_GRPC_CONNECTION_URL=currency-service:4006
      - RABBIT_MQ_URI=amqp://guest:guest@rabbitmq
    deploy:
      resources:
        limits:
          memory: 100m
          cpus: "0.1"
    depends_on:
      - mssql
      - rabbitmq
    ports:
      - 3018:3000
    networks:
      - production

  ordering-service:
    image: eshop_ordering-service
    environment:
      - RabbitMqOptions__UserName=guest
      - RabbitMqOptions__Password=guest
      - RabbitMqOptions__HostName=amqp://rabbitmq
      - GrpcConnectionOptions__CatalogServiceUrl=http://catalog-service:4000
      - GrpcConnectionOptions__VendorsServiceUrl=http://vendor-service:4004
      - GrpcConnectionOptions__PaymentsServiceUrl=http://payment-service:50051
      - CorsOptions__AllowedOrigins=http://customer-web-client:3000,https://festive-bassi-552424.netlify.app,https://cocky-dubinsky-6bdcf5.netlify.app
      - ConnectionStrings__DefaultConnection=Server=mssql,1433;Database=Ordering_Service_Db;User=SA;Password=Admin@123
    deploy:
      resources:
        limits:
          memory: 128m
          cpus: "0.1"
    ports:
      - 3019:80
    depends_on:
      - mssql
      - rabbitmq
    networks:
      - production

  notification-service:
    image: eshop_notification-service
    environment:
      - RabbitMqOptions__UserName=guest
      - RabbitMqOptions__Password=guest
      - RabbitMqOptions__HostAddress=amqp://rabbitmq
      - MailKitEmailSenderOptions__SenderName=eshop-no-reply
      - MailKitEmailSenderOptions__SenderEmail=eshop@noreply.com
      - MailKitEmailSenderOptions__HostPassword=
      - MailKitEmailSenderOptions__HostUsername=mailhog
      - MailKitEmailSenderOptions__HostPort=1025
      - MailKitEmailSenderOptions__HostAddress=mailhog
      - NotificationServiceDbOptions__ConnectionString=mongodb://root:password@mongo:27017
      - NotificationServiceDbOptions__DatabaseName=Notification_Service_Db
      - NotificationServiceDbOptions__CollectionName=Notifications
      - CorsOptions__AllowedOrigins=http://customer-web-client:3000,https://festive-bassi-552424.netlify.app
    deploy:
      resources:
        limits:
          memory: 64m
          cpus: "0.1"
    ports:
      - 3020:80
    depends_on:
      - mongo
      - mailhog
    networks:
      - production

  customer-web-client:
    image: eshop_customer-web-client
    ports:
      - 3000:80
    deploy:
      resources:
        limits:
          memory: 64m
          cpus: "0.1"
    depends_on:
      - kong-gateway
    networks:
      - production

  administration-web-client:
    image: eshop_administration-web-client
    deploy:
      resources:
        limits:
          memory: 64m
          cpus: "0.1"
    ports:
      - 3002:80
    depends_on:
      - kong-gateway
    networks:
      - production

networks:
  production:
    driver: overlay

volumes:
  mssql-data:
    driver: local
  mongo-data:
    driver: local
  postgres-data:
    driver: local
  redis-data:
    driver: local
